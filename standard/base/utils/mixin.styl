@require '../color/index.styl'
@require '../shape/index.styl'

flex-fix()
  flex 1
  flex-basis 0.000000001PX
  width 1%

border-1px($color = null, $radius = 2PX, $style = solid)
  position relative
  &::after
    content ''
    pointer-events none
    display block
    position absolute
    left 0
    top 0
    border 1PX $style $color
    border-radius $radius
    box-sizing border-box
    width 100%
    height 100%
    transform-origin 0 0
    @media (min-resolution 2dppx)
      width 200%
      height 200%
      border-radius 'calc(%s * 2)' % ($radius)
      transform scale(.5)
    @media (min-resolution 3dppx)
      width 300%
      height 300%
      border-radius 'calc(%s * 3)' % ($radius)
      transform scale(.333)

// should used with util(border-x-1px classes)
border-top-1px($color)
  &::before
    border-top-color $color

border-right-1px($color)
  &::after
    border-right-color $color

border-bottom-1px($color)
  &::after
    border-bottom-color $color

border-left-1px($color)
  &::before
    border-left-color $color

border-none()
  &::before
  &::after
    display none

touch-active(type = orange)
  if (type == orange)
    &:active
      color #fcc1a6
      background-color rgba(250, 143, 84, .04)
  else
    &:active
      color #c6c6c6
      background-color rgba(0, 0, 0, .04)

bg-image($url, $ext = '.png')
  background-image url($url + '@2x' + $ext)
  @media (min-resolution 3dppx)
    background-image url($url + '@3x' + $ext)

functions = constant env
safe-area-fn(fn, position)
  s('%s(safe-area-inset-%s)', fn, position)
safe-area-mixin(property, position, important = false)
  for fn in functions
    {property} safe-area-fn(fn, position) important == true ? !important : unquote('')
